name: CI/CD

on:
    push:
        branches: ["dev"]
    pull_request:
        branches: ["dev"]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "yarn"

            - name: Install Yarn
              run: npm install -g yarn

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build the project
              run: yarn build

            - name: Run tests
              run: yarn test

            - name: Upload build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: build-output
                  path: |
                      .next
                      .env

    deploy:
        runs-on: ubuntu-latest
        needs: build # Chạy deploy chỉ khi build thành công

        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v3
              with:
                  name: build-output
                  path: .

            - name: Debug - List files
              run: ls -R

            - name: Install caprover-cli
              run: yarn add -g caprover

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Preset Image Name
              run: echo "IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

            - name: Build and push Docker Image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ env.IMAGE_URL }}

            - name: Deploy Image to CapRover
              uses: caprover/deploy-from-github@v1.1.2
              with:
                  server: "${{ secrets.CAPROVER_SERVER }}"
                  app: "${{ secrets.APP_NAME }}"
                  token: "${{ secrets.CAPROVER_API_TOKEN }}"
                  image: ${{ env.IMAGE_URL }}
